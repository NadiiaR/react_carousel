{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","currentImage","setCurrentImage","imageRigth","imageLeft","length","widthCarousel","isEnd","isStart","_jsxs","className","children","_jsx","style","width","map","img","transform","concat","transition","src","alt","type","cn","onClick","nextImage","handlePrevImage","handleNextImage","App","sizeImages","setSizeImages","_useState3","_useState4","setStep","_useState5","_useState6","setFrameSize","_useState7","_useState8","setAnimationDuration","_useState9","_useState10","isInfinite","setIsInfinite","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7765dc94.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(1);\n  const imageRigth = (currentImage - 1) * itemWidth;\n  const imageLeft = images.length - frameSize + 1;\n\n  const widthCarousel = frameSize * itemWidth;\n  const isEnd = currentImage === imageLeft;\n  const isStart = currentImage === 1;\n\n  const handleNextImage = () => {\n    if (!isEnd) {\n      const nextImage = currentImage + step;\n\n      setCurrentImage(nextImage > imageLeft\n        ? imageLeft\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(1);\n    }\n  };\n\n  const handlePrevImage = () => {\n    if (!isStart) {\n      const nextImage = currentImage - step;\n\n      setCurrentImage(nextImage < 1\n        ? 1\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(imageLeft);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: widthCarousel }}\n      >\n        {images.map((img) => (\n          <li\n            key={img}\n            className=\"Carousel__list--link\"\n            style={{\n              transform: `translateX(-${imageRigth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={img}\n              alt={img}\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            { 'button--disabled': (isStart && !infinite) },\n          )}\n          onClick={() => handlePrevImage()}\n        >\n          {'<<'}\n        </button>\n\n        <button\n          className={cn(\n            'button',\n            { 'button--disabled': (isEnd && !infinite) },\n          )}\n          type=\"button\"\n          onClick={() => handleNextImage()}\n        >\n          {'>>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = state;\n  const [sizeImages, setSizeImages] = useState(130);\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isInfinite, setIsInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Carousel with ${images.length} images`}</h1>\n\n      <div className=\"App__inputs\">\n        <label>\n          Size images, px\n          <input\n            type=\"number\"\n            value={sizeImages}\n            min={10}\n            max={200}\n            onChange={(event) => setSizeImages(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Step per images\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={10}\n            onChange={(event) => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Frame size\n          <input\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={10}\n            onChange={(event) => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Anumation, ms\n          <input\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={3000}\n            onChange={(event) => setAnimationDuration(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={isInfinite}\n            onChange={(event) => setIsInfinite(!!event.target.checked)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={sizeImages}\n        animationDuration={animationDuration}\n        infinite={isInfinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}